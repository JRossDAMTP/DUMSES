Shearing box energy source term :
- added in source_term

Upwind solver for the azimuthal advection :
- energy terms have been modified (in umuscl.f90, subroutine : cmpflxm)

Viscosity :
- added an additional term in momentum flux due to background keplerian shear
- added additional terms in energy flux due to background keplerian shear
- added volumic source terms for the energy 

Resistivity :
- update of the energy added (fluxes were already implemented)


Thermal diffusion :
- written subroutine thermal_diffusion in thermal_diffusion.f90 : computes energy flux and updates energy
- added declaration of kappa (=thermal diffusivity) in variables.f90 where nu and eta are declared
- initialise kappa in init.f90 in the same way as eta and nu (subroutines : read_input and default_params) 
- subroutine get_kappa written in user_init.f90 : gives the value of kappa for a given value of rho and P (so far kappa is constant though..)
- subroutine get_P written in user_init.f90 : computes the pressure given energy, momentum and magnetic field.
- added a condition .or.(kappa>0.d0) for the call to subroutine dissip (so that it is called if kappa>0 even if nu=eta=0)

Subroutine dissip :
- added flux=0 before resistivity
- added a call to thermal_diffusion

CFL condition : 
time step constraints from thermal diffusion, viscosity and resistivity have been added in the subroutine compute_dt. The formula used is dt < 0.5 dx^2/kappa/ndim. 


Cooling function :
- new subroutine get_cool written in user_init.f90
- cooling step added in source_term

Boundary conditions :
boundana_extrap_T.f90 contains vertical boundary conditions where the temperature is linearly extrapolated. However this does not work well : it is less stable than using a zerogradient condition on the temperature, and the code tends to crash after some time for a polytropic atmosphere.

Subroutine user_init.f90 :
a switch has been added to allow for a non-stratified shearing box : when stratif is 'false' then the vertical gravity is switched off.


Initial conditions :
- condinit_mag.f90 is the old initial condition with an isothermal disc and different kinds of magnetic field configuration and perturbations.
- condinit_polytrop.f90 contains the initial conditions for a polytropic atmosphere. Linear waves (r-modes) can be added by reading from a file.
- condinit_heatcool.f90 contains the initial conditions for a static equilibrium including viscous heating, thermal diffusion and cooling
- condinit_heatcool_mag.f90 : same with a magnetic field added to trigger MHD turbulence.
- condinit_heatcool_nokappa.f90 contains the initial conditions for a static equilibrium including viscous heating and cooling (but no thermal diffusion)
- condinit_epientropy.f90 : contains the initial conditions for an entropy wave or an oscillation of vertical magnetic field with no total pressure perturbations (radial or azimuthal wavenumber, unstratified shearing box). Epicyclic oscillations can be added as well.

